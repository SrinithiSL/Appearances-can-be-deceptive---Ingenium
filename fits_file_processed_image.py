# -*- coding: utf-8 -*-
"""Fits_file_Processed_image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Xcd98RCG2Ys5Q7nozWI2OZLZb_ZRWEQ
"""

!pip install astropy
!pip install specutils

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from astropy.table import Table
from astropy.io import fits
import cv2

!unzip /content/drive/MyDrive/ingenium/63b2a51a490fe_0_dss2-blue.zip

!unzip /content/drive/MyDrive/ingenium/63b2a53c7f4e8_0_dss2-red.zip

blue= "/content/0_dss2-blue.fits"
red = "/content/0_dss2-red.fits"

blue_open=fits.open(blue)
red_open=fits.open(red)

print("INFORMATION:\n")
print(blue_open.info())
print("\n")
print(red_open.info())

blue_open[0].header

red_open[0].header

blue_PRIMARY_KEYS = list(blue_open[0].header.keys())
red_PRIMARY_KEYS = list(red_open[0].header.keys())

blue_PRIMARY_KEYS

blue_PRIMARY_COMMENTS = blue_open[0].header
red_PRIMARY_COMMENTS = red_open[0].header

print("DATE")
print("---"*5)
print(blue_PRIMARY_COMMENTS.comments["DATE"])
print(blue_PRIMARY_COMMENTS["DATE"])

print("OBSERVATION DATE:")
print(blue_PRIMARY_COMMENTS.comments["DATE-OBS"])
print(blue_PRIMARY_COMMENTS["DATE-OBS"])

print("EQUINOX:")
print("---"*5)
print(blue_PRIMARY_COMMENTS.comments["EQUINOX"])
print(blue_PRIMARY_COMMENTS["EQUINOX"])

print("TELESCOP:")
print("---"*5)
print(blue_PRIMARY_COMMENTS.comments["TELESCOP"])
print(blue_PRIMARY_COMMENTS["TELESCOP"])

blue_IMAGE = blue_open[0].data
red_IMAGE = red_open[0].data

blue_IMAGE

CMAP_LIST = ["BuPu_r","CMRmap","Greys_r","Oranges_r","PuRd_r",
             "Purples_r","YlGnBu_r","flag","afmhot","bone",
            "cividis","cubehelix","gist_stern","inferno","mako","ocean"]

for x_spec in CMAP_LIST:
    
    figure,axis = plt.subplots(1,2,figsize=(25,25))
    
    axis[0].imshow(blue_IMAGE/ 255.,cmap=x_spec) 
    axis[0].set_title("BLUE IMAGE"+ x_spec)
    axis[0].axis("off")
    
    axis[1].imshow(red_IMAGE / 255.,cmap=x_spec)
    axis[1].set_title("RED IMAGE"+ x_spec)
    axis[1].axis("off")
    
        
    plt.tight_layout()
    plt.show()